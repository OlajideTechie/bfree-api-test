name: run api core test on staging
on:
  push:
    branches:
      - master
jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    # INstall Node on the runner
    - name: Install Node
      uses: actions/setup-node@v1
      with: 
        node-version: '14.x'
    
    # Install the newman command line utility and also install the html extra reporter
    - name: Install newman
      run: |
       npm install -g newman
       npm install -g newman-reporter-htmlextra

    # Make directory to upload the test results
    - name: Make Directory for results
      run: |
        mkdir -p testResults

    # Run the collection
    - name: Run Integration Tests
      run: |
       newman run bfree-core.json -e core-environment.json
       
    - name: Generate HTML Report
      run: |
       newman run bfree-core.json -e core-environment.json -r htmlextra --reporter-htmlextra-export testResults/core-api-testReport.html --reporter-htmlextra-darkTheme
       
    # Upload the contents of Test Results directory to workspace
    - name: Output the run Details
      uses: actions/upload-artifact@v2
      with: 
       name: TestReports
       path: testResults
         
       uses: 8398a7/action-slack@v3
       status: ${{ job.status }}
       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.https://hooks.slack.com/services/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}} # required
      if: always() # Pick up events even if the job fails or is canceled.

       
 
