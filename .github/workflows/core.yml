name: run api core test on staging
on:
  push:
  pull_request:
    
jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    # INstall Node on the runner
    - name: Install Node
      uses: actions/setup-node@v1
      with: 
        node-version: '16.x'
    
    # Install the newman command line utility and also install the html extra reporter
    - name: Install newman
      run: |
       npm install -g newman
       npm install -g newman-reporter-htmlextra

    # Make directory to upload the test results
    - name: Make Directory for results
      run: |
        mkdir -p testResults

    # Run the collection
    #- name: Run Integration Tests
     # run: |
      # newman run bfree-core.json -e core-environment.json
      
        # Echo message
    - name: Echo Message
      run: |
        echo test in progress ...
       
    - name: Generate Report
      run: |
       newman run bfree-core.json -e core-environment.json -r htmlextra --reporter-htmlextra-export testResults/core-api-testReport.html --reporter-htmlextra-darkTheme
       
    # Upload the contents of Test Results directory to workspace
    - name: Output the run Details
      uses: actions/upload-artifact@v2
      with: 
       name: TestReports
       path: testResults

   # - name: Email
     # if: always()
      #uses: dawidd6/action-send-mail@v2
      #with:
           # mail server settings
       #server_address: smtp.gmail.com
       #server_port: 465
       
        # user credentials
       #username: ${{ secrets.EMAIL_USERNAME}}
       #password: ${{ secrets.EMAIL_PASSWORD}}
       
       # email subject
       #subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
      # email body as text
       #body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
      # comma-separated string, send email to
       #to: olajide.interview@gmail.com
     # from email name
       #from: Github Actions
       
    #- name: Report Status
      #if: always()
      #uses: ravsamhq/notify-slack-action@master
      #with:
        #status: ${{ job.status }}
        #notify_when: 'failure'
#env:
    #SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
      
